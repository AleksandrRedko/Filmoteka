"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdatefilmoteka"]("main",{

/***/ "./src/js/init.js":
/*!************************!*\
  !*** ./src/js/init.js ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _refs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./refs */ \"./src/js/refs.js\");\n/* harmony import */ var _templates_cardMovies_hbs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../templates/cardMovies.hbs */ \"./src/templates/cardMovies.hbs\");\n/* harmony import */ var _templates_cardMovies_hbs__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_templates_cardMovies_hbs__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _moviesApiServise__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./moviesApiServise */ \"./src/js/moviesApiServise.js\");\n/* harmony import */ var _js_pagination__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../js/pagination */ \"./src/js/pagination.js\");\n/* harmony import */ var _modal__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./modal */ \"./src/js/modal.js\");\n/* harmony import */ var _spiner__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./spiner */ \"./src/js/spiner.js\");\n/* harmony import */ var notiflix_build_notiflix_notify_aio__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! notiflix/build/notiflix-notify-aio */ \"./node_modules/notiflix/build/notiflix-notify-aio.js\");\n/* harmony import */ var notiflix_build_notiflix_notify_aio__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(notiflix_build_notiflix_notify_aio__WEBPACK_IMPORTED_MODULE_6__);\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst moviesApiServise = new _moviesApiServise__WEBPACK_IMPORTED_MODULE_2__[\"default\"]();\r\n\r\n// spinerOn();\r\n// функция вывода сообщения\r\nconst showMessage = function (data) {\r\n  data.total_results === 0\r\n    ? notiflix_build_notiflix_notify_aio__WEBPACK_IMPORTED_MODULE_6__.Notify.failure('Nothing found for your request')\r\n    : notiflix_build_notiflix_notify_aio__WEBPACK_IMPORTED_MODULE_6__.Notify.success(`Found ${data.total_results} movies`);\r\n  return data;\r\n};\r\n\r\n// функция рендера карточек фильма на главную страницу\r\nconst renderPage = async function ({ dataNew, data }) {\r\n  (0,_spiner__WEBPACK_IMPORTED_MODULE_5__.spinerOn)();\r\n\r\n  const markup = _templates_cardMovies_hbs__WEBPACK_IMPORTED_MODULE_1___default()(dataNew);\r\n  _refs__WEBPACK_IMPORTED_MODULE_0__.refs.cardList.innerHTML = markup;\r\n\r\n  return data;\r\n};\r\n// функция рендера пагинации  на  страницу\r\nconst pagination = async function (data) {\r\n  const paginationList = document.querySelector('.pagination');\r\n\r\n  const list = document.querySelector('.pagination__pages');\r\n  const current = data.page;\r\n  const pages = data.total_pages;\r\n  setTimeout(() => {\r\n    (0,_spiner__WEBPACK_IMPORTED_MODULE_5__.spinerOf)();\r\n  }, 500);\r\n  return { current, pages, list, paginationList };\r\n};\r\n\r\nconst findMovies = function (e) {\r\n  e.preventDefault();\r\n  if (!e.target.searchQuery.value) {\r\n    return;\r\n  }\r\n\r\n  if (e.target.searchQuery.value !== '') {\r\n    moviesApiServise.resetPage();\r\n    // записываем поисковое слово\r\n    moviesApiServise.query = e.target.searchQuery.value;\r\n    //  вызываем fetch запрос по слову\r\n    moviesApiServise\r\n      .fetchMovies()\r\n      .then(renderPage)\r\n      .then(showMessage)\r\n      .then(pagination)\r\n      .then(_js_pagination__WEBPACK_IMPORTED_MODULE_3__.activatePagination)\r\n\r\n      .catch((error) => console.log(error.message));\r\n  }\r\n};\r\n// проверяет какому fetch делать запрос\r\nconst functionSelection = function () {\r\n  if (moviesApiServise.query === '') {\r\n    moviesApiServise\r\n      .fetchPopularMovies()\r\n      .then(renderPage)\r\n      .then(pagination)\r\n      .then(_js_pagination__WEBPACK_IMPORTED_MODULE_3__.activatePagination)\r\n      .catch((error) => console.log(error.message));\r\n  } else if (moviesApiServise.query !== '') {\r\n    moviesApiServise\r\n      .fetchMovies()\r\n      .then(renderPage)\r\n      .then(pagination)\r\n      .then(_js_pagination__WEBPACK_IMPORTED_MODULE_3__.activatePagination)\r\n      .catch((error) => console.log(error.message));\r\n  }\r\n};\r\n\r\n// функция запроса по клику на пагинацию\r\nconst clickToMakeaRequest = function (e) {\r\n  if (!e.target.dataset.pg) {\r\n    return;\r\n  }\r\n\r\n  if (e.target.dataset.pg === 'right') {\r\n    moviesApiServise.incrementPage();\r\n    functionSelection();\r\n\r\n    return;\r\n  }\r\n\r\n  if (e.target.dataset.pg === 'left') {\r\n    moviesApiServise.dincrementPage();\r\n    functionSelection();\r\n\r\n    return;\r\n  }\r\n\r\n  if (e.target.dataset.pg) {\r\n    moviesApiServise.page = +e.target.dataset.pg;\r\n    functionSelection();\r\n\r\n    return;\r\n  }\r\n};\r\n//  вызываем fetch запрос популярных фильмов\r\nmoviesApiServise\r\n  .fetchPopularMovies()\r\n  .then(renderPage)\r\n  .then(showMessage)\r\n  .then(pagination)\r\n  .then(_js_pagination__WEBPACK_IMPORTED_MODULE_3__.activatePagination)\r\n  .catch((error) => console.log(error.message));\r\n// вешаем слушатель событий на инпут(поиск по слову)\r\n_refs__WEBPACK_IMPORTED_MODULE_0__.refs.searchForm.addEventListener('submit', findMovies);\r\n// опять добавляем слушатель событий на пагинацию\r\n_refs__WEBPACK_IMPORTED_MODULE_0__.refs.pagination.addEventListener('click', clickToMakeaRequest);\r\n// вешаем слушатель событий на список карточек фильмов\r\n_refs__WEBPACK_IMPORTED_MODULE_0__.refs.cardList.addEventListener('click', _modal__WEBPACK_IMPORTED_MODULE_4__[\"default\"]);\r\n_refs__WEBPACK_IMPORTED_MODULE_0__.refs.watchedList.addEventListener('click', _modal__WEBPACK_IMPORTED_MODULE_4__[\"default\"]);\r\n_refs__WEBPACK_IMPORTED_MODULE_0__.refs.queueList.addEventListener('click', _modal__WEBPACK_IMPORTED_MODULE_4__[\"default\"]);\r\n\n\n//# sourceURL=webpack://filmoteka/./src/js/init.js?");

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ /* webpack/runtime/getFullHash */
/******/ (() => {
/******/ 	__webpack_require__.h = () => ("80369ea406204dcc9b33")
/******/ })();
/******/ 
/******/ }
);